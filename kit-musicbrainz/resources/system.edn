{
 :system/env
 #profile {:dev  :dev
           :test :test
           :prod :prod}


 :repl/server
 {:port #long #or [#env REPL_PORT 7000]
  :host #or [#env REPL_HOST "0.0.0.0"]}

 :cache/redis
 {:ttl  3600
  :conn {:pool {}
         :spec {:uri #profile {:dev  #ig/ref :cache/dev-redis
                               :test #ig/ref :cache/dev-redis
                               :prod #env REDIS_URI}}}}

 :server/http
 {:port    #long #or [#env PORT 3000]
  :handler #ig/ref :handler/ring}

 :handler/ring
 {:router                #ig/ref :router/core
  ;; This config disables the Swagger UI on production
  :api-path              #profile {:dev  "/api"
                                   :test "/api"
                                   :prod nil}
  :cookie-session-config {:cookie-secret          #or [#env COOKIE_SECRET "16charsecrethere"]
                          :cookie-name            "kit-clj.kit-musicbrainz"
                          :cookie-default-max-age 86400}

  ;; from ring.middleware.defaults. anti-forgery `false` by default because services may not require it
  :site-defaults-config  {:params    {:urlencoded true
                                      :multipart  true
                                      :nested     true
                                      :keywordize true}
                          :cookies   true
                          :session   {:flash        true
                                      :cookie-attrs {:http-only true, :same-site :strict}}
                          :security  {:anti-forgery         false
                                      :xss-protection       {:enable? true, :mode :block}
                                      :frame-options        :sameorigin
                                      :content-type-options :nosniff}
                          :static    {:resources "public"}
                          :responses {:not-modified-responses true
                                      :absolute-redirects     true
                                      :content-types          true
                                      :default-charset        "utf-8"}}
  }

 :reitit.routes/api
 {:base-path "/api"
  :env       #ig/ref :system/env

  :cache     #ig/ref :cache/redis
  :query-fn  #ig/ref :db.sql/query-fn}

 :router/routes
 {:routes #ig/refset :reitit/routes}

 :router/core
 {:routes #ig/ref :router/routes}

 :cronut/scheduler
 {:dependencies                 [#ig/ref :cache/redis]
  :schedule                     #profile {:test    []
                                          :default [{:job     #ig/ref :messages/cycle-message-job
                                                     :trigger #cronut/cron "0 0 12 * * ?"}]}
  :disallowConcurrentExecution? true}

 :messages/cycle-message-job
 {:identity    "messages/cycle-message-job"
  :description "Randomly selects a message of the day"
  :recover?    false
  :durable?    false

  :cache       #ig/ref :cache/redis}


 :db.sql/connection
 #profile {:dev  {:jdbc-url #ig/ref :db.sql/dev-postgres}
           :test {:jdbc-url #ig/ref :db.sql/dev-postgres}
           :prod {:jdbc-url   #env JDBC_URL
                  :init-size  1
                  :min-idle   1
                  :max-idle   8
                  :max-active 32}}

 :db.sql/query-fn
 {:conn     #ig/ref :db.sql/connection
  :options  {}
  :filename "queries.sql"}

 :db.sql/migrations
 {:store            :database
  :db               {:datasource #ig/ref :db.sql/connection}
  :migrate-on-init? true}

 }
